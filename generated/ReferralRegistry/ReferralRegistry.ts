// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ReferralRegistry extends ethereum.SmartContract {
  static bind(address: Address): ReferralRegistry {
    return new ReferralRegistry("ReferralRegistry", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  checkCodeValidity(code: Bytes): boolean {
    let result = super.call(
      "checkCodeValidity",
      "checkCodeValidity(bytes):(bool)",
      [ethereum.Value.fromBytes(code)]
    );

    return result[0].toBoolean();
  }

  try_checkCodeValidity(code: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkCodeValidity",
      "checkCodeValidity(bytes):(bool)",
      [ethereum.Value.fromBytes(code)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAddressForCode(code: Bytes): Address {
    let result = super.call(
      "getAddressForCode",
      "getAddressForCode(bytes):(address)",
      [ethereum.Value.fromBytes(code)]
    );

    return result[0].toAddress();
  }

  try_getAddressForCode(code: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAddressForCode",
      "getAddressForCode(bytes):(address)",
      [ethereum.Value.fromBytes(code)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCode(user: Address): Bytes {
    let result = super.call("getCode", "getCode(address):(bytes)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBytes();
  }

  try_getCode(user: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall("getCode", "getCode(address):(bytes)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxCodeUsed(): BigInt {
    let result = super.call("maxCodeUsed", "maxCodeUsed():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxCodeUsed(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxCodeUsed", "maxCodeUsed():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _maxUsed(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAllowAddressCall extends ethereum.Call {
  get inputs(): AddAllowAddressCall__Inputs {
    return new AddAllowAddressCall__Inputs(this);
  }

  get outputs(): AddAllowAddressCall__Outputs {
    return new AddAllowAddressCall__Outputs(this);
  }
}

export class AddAllowAddressCall__Inputs {
  _call: AddAllowAddressCall;

  constructor(call: AddAllowAddressCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAllowAddressCall__Outputs {
  _call: AddAllowAddressCall;

  constructor(call: AddAllowAddressCall) {
    this._call = call;
  }
}

export class AssignReferralCodeCall extends ethereum.Call {
  get inputs(): AssignReferralCodeCall__Inputs {
    return new AssignReferralCodeCall__Inputs(this);
  }

  get outputs(): AssignReferralCodeCall__Outputs {
    return new AssignReferralCodeCall__Outputs(this);
  }
}

export class AssignReferralCodeCall__Inputs {
  _call: AssignReferralCodeCall;

  constructor(call: AssignReferralCodeCall) {
    this._call = call;
  }
}

export class AssignReferralCodeCall__Outputs {
  _call: AssignReferralCodeCall;

  constructor(call: AssignReferralCodeCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class MarkCodeAsUsedCall extends ethereum.Call {
  get inputs(): MarkCodeAsUsedCall__Inputs {
    return new MarkCodeAsUsedCall__Inputs(this);
  }

  get outputs(): MarkCodeAsUsedCall__Outputs {
    return new MarkCodeAsUsedCall__Outputs(this);
  }
}

export class MarkCodeAsUsedCall__Inputs {
  _call: MarkCodeAsUsedCall;

  constructor(call: MarkCodeAsUsedCall) {
    this._call = call;
  }

  get code(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class MarkCodeAsUsedCall__Outputs {
  _call: MarkCodeAsUsedCall;

  constructor(call: MarkCodeAsUsedCall) {
    this._call = call;
  }
}

export class RemoveDisallowAddressCall extends ethereum.Call {
  get inputs(): RemoveDisallowAddressCall__Inputs {
    return new RemoveDisallowAddressCall__Inputs(this);
  }

  get outputs(): RemoveDisallowAddressCall__Outputs {
    return new RemoveDisallowAddressCall__Outputs(this);
  }
}

export class RemoveDisallowAddressCall__Inputs {
  _call: RemoveDisallowAddressCall;

  constructor(call: RemoveDisallowAddressCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveDisallowAddressCall__Outputs {
  _call: RemoveDisallowAddressCall;

  constructor(call: RemoveDisallowAddressCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}
